[{"/app/frontend/src/routes/Router.tsx":"1","/app/frontend/src/pages/Main/MainPage.tsx":"2","/app/frontend/src/pages/UserInfo/UserInfo.tsx":"3","/app/frontend/src/reportWebVitals.ts":"4","/app/frontend/src/index.tsx":"5"},{"size":867,"mtime":1606561657351,"results":"6","hashOfConfig":"7"},{"size":3044,"mtime":1606584412355,"results":"8","hashOfConfig":"7"},{"size":560,"mtime":1606561657350,"results":"9","hashOfConfig":"7"},{"size":425,"mtime":1606561657350,"results":"10","hashOfConfig":"7"},{"size":642,"mtime":1606561657350,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"4ob8td",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/app/frontend/src/routes/Router.tsx",["24"],"/app/frontend/src/pages/Main/MainPage.tsx",["25","26"],"import React from 'react';\nimport styles from './MainPage.module.scss';\nimport classNames from \"classnames\";\nimport Grid from '@material-ui/core/Grid';\nimport backgroundGreenGradient from '../../assets/images/background-green-gradient.png';\nimport { Icon, CircularProgress } from '@material-ui/core';\n\nconst MainPage = () => {\n    const cx = classNames.bind(styles);\n\n    return (\n        <Grid className={cx(styles.container)} container\n        >\n            <Grid className={cx(styles.containerItem)} item xs={7}>\n                <div className={cx(styles.leftItemContainer)}>\n                    <div>\n                        <h1>Invenient<br/> Face</h1>\n                        <p>INNOTECH HACK</p>\n                    </div>\n                </div>\n            </Grid>\n            <Grid style={{\n                background: `url(${backgroundGreenGradient})`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover'\n            }} className={cx(styles.containerItem)} item xs={5}>\n                <div className={cx(styles.rightItemContainer)}>\n                    <p className={cx(styles.itemTitle)}>\n                        Сервис для идентификации по фотографии клиентов\n                        банка и сбора их финансового профиля из различных открытых источников.\n                    </p>\n                    <Grid className={cx(styles.progressStepsContainer)} container alignItems=\"center\">\n                        <Grid item xs={2}>\n                            <span className={cx(styles.progressStep)}>1</span>\n                        </Grid>\n                        <Grid item className={cx(styles.progressMessage)} xs={8}>\n                            Добавьте ссылки\n                        </Grid>\n                       <Grid item xs={2}>\n                           <span className={cx(styles.progressStep, styles.notActive)}>2</span>\n                       </Grid>\n                    </Grid>\n\n                    {/*TODO: change text input after button clicked*/}\n                    <textarea rows={12} className={cx(styles.textArea)}>\n                    </textarea>\n                    <button className={cx(styles.submitLinksButton)}>\n                         ОТПРАВИТЬ\n                    </button>\n\n                    {/*TODO: upload Image*/}\n                    {/*<div className={cx(styles.uploadImageButton)}>*/}\n                    {/*    /!*<Icon>*!/*/}\n                    {/*    /!*    backup*!/*/}\n                    {/*    /!*</Icon>*!/*/}\n                    {/*    */}\n                    {/*    /!*TODO: add spinner when loading*!/*/}\n                    {/*    <CircularProgress style={{color: 'white'}} size={50} />*/}\n                    {/*</div>*/}\n                    {/*<div className={cx(styles.infoBeforeUpdload)}>*/}\n\n                    {/*</div>*/}\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport { MainPage };\n","/app/frontend/src/pages/UserInfo/UserInfo.tsx",[],"/app/frontend/src/reportWebVitals.ts",[],"/app/frontend/src/index.tsx",["27"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Router from './routes/Router';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n      <React.StrictMode>\n        <Router />\n      </React.StrictMode>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",{"ruleId":"28","severity":1,"message":"29","line":13,"column":11,"nodeType":"30","messageId":"31","endLine":13,"endColumn":22},{"ruleId":"28","severity":1,"message":"32","line":6,"column":10,"nodeType":"30","messageId":"31","endLine":6,"endColumn":14},{"ruleId":"28","severity":1,"message":"33","line":6,"column":16,"nodeType":"30","messageId":"31","endLine":6,"endColumn":32},{"ruleId":"28","severity":1,"message":"34","line":4,"column":8,"nodeType":"30","messageId":"31","endLine":4,"endColumn":11},"@typescript-eslint/no-unused-vars","'RouterProps' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'CircularProgress' is defined but never used.","'App' is defined but never used."]